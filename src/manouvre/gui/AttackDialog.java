/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package manouvre.gui;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Toolkit;
import java.util.ArrayList;
import javafx.beans.Observable;
import javax.swing.JRootPane;
import javax.swing.SwingConstants;
import javax.swing.WindowConstants;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import manouvre.game.Card;
import manouvre.game.CardSet;
import manouvre.game.Game;
import manouvre.game.Position;
import manouvre.game.Unit;
import manouvre.game.commands.CommandQueue;
import manouvre.game.commands.MoveUnitCommand;
import manouvre.game.interfaces.ClientInterface;
import manouvre.network.client.Message;
import manouvre.network.client.SocketClient;
import manouvre.game.interfaces.Command;

/**
 *
 * @author Piotr
 */
public class AttackDialog extends javax.swing.JFrame {

    Command okCommand;
    Command withdrawCommand;
    
    CardGUI playedCardGui;
    UnitGUI attackedUnitGui;
    
    Card playedCard;
    Unit attackedUnit;
    
    String attackType;
    
    ClientInterface client;
    CommandQueue cmdQueue;
    Game game;
    
    CustomDialog withdrawDialog;
    
    public AttackDialog() {
        initComponents();
    }
    public AttackDialog(String attackType, Card playedCard, Unit attackedUnit, ClientInterface client, CommandQueue cmdQueue, Game game){
  
        this.attackType = attackType;
        this.playedCard = playedCard;
        
        this.attackedUnit = attackedUnit;
        this.client = client;
        this.cmdQueue = cmdQueue;
        this.game = game;

        this.setUndecorated(true);
        this.getRootPane().setWindowDecorationStyle(JRootPane.NONE);
        
        initComponents();
        
        //textPane.setBackground(jPanel1.getBackground());
        //textPane.setForeground(jPanel1.getBackground());
        
        SimpleAttributeSet center = new SimpleAttributeSet();
        StyleConstants.setAlignment(center, StyleConstants.ALIGN_CENTER);
                   
        setButtonVisibility();
        
        //textArea.setHorizontalAlignment(SwingConstants.CENTER);
        
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        // Determine the new location of the window
        int w = this.getSize().width;
        int h = this.getSize().height;
        int x = (dim.width-w)/2;
        int y = (dim.height-h)/2;
        this.setLocation(x, y);
        
        chooseCardsAvailableForDefence();
        
        labelTitle.setText(labelTitle.getText() + " " + attackType);
        
        setVisible(true);
        this.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
    }
    
    private void chooseCardsAvailableForDefence(){
        int numberOfDeffendingCards=0;
        CardSet hand=game.getCurrentPlayer().getHand();
           for(int i=0; i<hand.cardsLeftInSet();i++){
               if(attackedUnit.getName()==hand.getCardNameByPosInSet(i)){
                   numberOfDeffendingCards++;
                   hand.getCardByPosInSet(i).setAvailableForDefance(true);
               }
               else {
                   hand.getCardByPosInSet(i).setAvailableForDefance(false);
                   numberOfDeffendingCards--;
               }
           }
           nrOfDefendingCardsTxt.setText(Integer.toString(numberOfDeffendingCards));
           if(numberOfDeffendingCards>0)defendButton.setEnabled(true);
           else defendButton.setEnabled(false);
    }
    private void setButtonVisibility()
    {
        
        if(game.getCurrentPlayer().getHand().getCardByName("Withdraw", false)!=null)
         cancelButton.setEnabled(true);
    }
            
    
        

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel()
        {
            @Override
            public void paintComponent(Graphics g) {
                drawCard(g);

            }
        }
        ;
        labelTitle = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel()
        {
            @Override
            public void paintComponent(Graphics g) {
                drawUnit(g);

            }
        }
        ;
        defendButton = new javax.swing.JButton();
        nrOfDefendingCardsTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.FlowLayout());

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Withdraw");
        cancelButton.setEnabled(false);
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 159, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 223, Short.MAX_VALUE)
        );

        labelTitle.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        labelTitle.setText("You have been");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        defendButton.setText("DEFEND!");
        defendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defendButtonActionPerformed(evt);
            }
        });

        nrOfDefendingCardsTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nrOfDefendingCardsTxt.setText("nr of cards");
        nrOfDefendingCardsTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nrOfDefendingCardsTxtActionPerformed(evt);
            }
        });

        jLabel1.setText("Choose from ");

        jLabel2.setText("defending cards");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cancelButton)
                        .addGap(26, 26, 26)
                        .addComponent(defendButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(labelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 9, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(nrOfDefendingCardsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(25, 25, 25))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(labelTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nrOfDefendingCardsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(defendButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cancelButton)
                        .addComponent(okButton)))
                .addContainerGap())
        );

        getContentPane().add(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
         if(okCommand != null)   {
            /*
            Execute command locally and remotely
            */
            cmdQueue.storeAndExecuteAndSend(okCommand);
            
        }
        
        this.dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
       
        ArrayList<Position> withdrawPositions = game.getRetreatPositions(attackedUnit);
        if(!withdrawPositions.isEmpty())        
        {
        game.getMap().setUnitSelected(true);
        game.getCardCommandFactory().setAttackedUnit(attackedUnit);
        if(withdrawPositions.size() == 1 )
        {
            MoveUnitCommand moveUnit = new MoveUnitCommand(game.getCurrentPlayer().getName(), attackedUnit, withdrawPositions.get(0));
            game.getCardCommandFactory().setAttachedCommand(moveUnit);
            withdrawCommand = game.getCardCommandFactory().createCardCommand();
            cmdQueue.storeAndExecuteAndSend(withdrawCommand);
         
        }
        else 
        {
            /*
            Very simple dialog bumped with right / left choice
            */
            Position moveLeft, moveRight;
            
            moveLeft = new Position(attackedUnit.getPosition().getX() - (game.getCurrentPlayer().isHost() ? 1 : -1 ), attackedUnit.getPosition().getY() );
            moveRight = new Position(attackedUnit.getPosition().getX() - (game.getCurrentPlayer().isHost() ? -1 : 1 ), attackedUnit.getPosition().getY() );
            
            MoveUnitCommand moveUnitLeft = new MoveUnitCommand(game.getCurrentPlayer().getName(), attackedUnit, moveLeft);
            game.getCardCommandFactory().setAttachedCommand(moveUnitLeft);
            Command withdrawCommandLeft = game.getCardCommandFactory().createCardCommand();
            
            MoveUnitCommand moveUnitRight = new MoveUnitCommand(game.getCurrentPlayer().getName(), attackedUnit, moveRight);
            game.getCardCommandFactory().setAttachedCommand(moveUnitRight);
            Command withdrawCommandRight = game.getCardCommandFactory().createCardCommand();
            
            VerySimpleDialog vsd = new VerySimpleDialog( "Left", withdrawCommandLeft, "Right", withdrawCommandRight, cmdQueue, game);
            
        }
        }
        else 
        {   withdrawDialog = 
                    new CustomDialog(CustomDialog.CONFIRMATION_TYPE, game.getCurrentPlayer().getName()+" You dont have free posision to witdraw", cmdQueue, game);
        }
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void defendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defendButtonActionPerformed
       //here command to paint the cards on table -> GameGui -> public void paintDefenceCardsOnTheTable(Graphics g){
    }//GEN-LAST:event_defendButtonActionPerformed

    private void nrOfDefendingCardsTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nrOfDefendingCardsTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nrOfDefendingCardsTxtActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AttackDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AttackDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AttackDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AttackDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AttackDialog().setVisible(true);
            }
        });
    }
    public void setOkCommand(Command okCommand) {
        this.okCommand = okCommand;
    }

    public void setWithdrawCommand(Command withdrawCommand) {
        this.withdrawCommand = withdrawCommand;
    }

    private void drawCard(Graphics g){
        CardGUI playedCardgui = new CardGUI((playedCard));
        
        g.drawImage(playedCardgui.getImgFull(),0,0, 
                (int) (playedCardgui.getImgFull().getWidth(this) * CardGUI.SCALE_FACTOR),
                (int)(playedCardgui.getImgFull().getHeight(this) * CardGUI.SCALE_FACTOR)
                , null);
        
    }
    
    private void drawUnit(Graphics g){
    UnitGUI unitGui = new UnitGUI(attackedUnit);
         g.drawImage(unitGui.getImg(),0,0, 
                MapGUI.PIECE_WIDTH
               ,MapGUI.PIECE_HEIGHT, null);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton defendButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JTextField nrOfDefendingCardsTxt;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables
}
